new = [[{'weights': [0.30573169772929293, 0.8055761764128744, 2.3968540212645597, -0.030407609256729737, 1.024996021340088, 0.011959686257542622, -0.8183072123743241, 1.0691032405598846], 'output': 0.9320497753340742, 'delta': -1.3474620224097246e-06}, {'weights': [-0.4419711981692258, -0.03920032345388966, -0.9937608921963808, 2.34297829949806, -1.6507809281035015, -3.856798773699736, -8.03846949248732, 2.2515140069700945], 'output': 0.05125536211258265, 'delta': -1.908705995637101e-06}, {'weights': [5.048895800225226, 5.505890063420924, -0.9803405070024096, -7.274349871679305, 4.125700307409508, 3.1989723048729153, 5.588863230407694, -7.518838806148107], 'output': 0.04495574310843642, 'delta': -2.0895347105237516e-07}, {'weights': [1.9098328692434754, 1.306196248171293, -1.214303219291623, -11.472206282165635, 2.3062061809729997, 3.0525976290353576, 12.1215997966469, -2.0096249527277426], 'output': 0.8036257427725826, 'delta': 5.992183533999822e-06}, {'weights': [-8.081248924032485, -8.56384143608408, 1.7599221805417118, -7.316353966434203, -5.524786935037697, -0.46229800496277923, 8.899125992016353, 5.111228825543781], 'output': 0.9200345874071931, 'delta': 3.5682275502188765e-06}], [{'weights': [-3.5949426829887265, -9.211490053457878, -4.390917416279639, 6.198058622980434, 8.657507347988417, -2.6848220567437493], 'output': 0.9980560725359565, 'delta': 3.771508167417573e-06}, {'weights': [-2.9092162828453616, 0.31902311911418685, 8.233225473016514, 7.721182056989427, -6.281117681671142, -5.590389772553648], 'output': 0.0005586959632670072, 'delta': -3.119667873539651e-07}, {'weights': [5.378935860252129, 2.7504043906732742, -8.894434577600817, -10.603934333075724, -8.661841797694219, 5.066470640581786], 'output': 0.0012670913670553762, 'delta': -1.603486191259944e-06}]]
old = [[{'weights': [0.30614898241195915, 0.8072620557085353, 2.393159685836509, -0.026485083678283478, 1.0237935885227085, 0.014806069257820504, -0.8128841129122534, 1.07480968483572], 'output': 0.9325419135685273, 'delta': -1.343527148639566e-06}, {'weights': [-0.4410235964399947, -0.03838841299522487, -0.9919593954805828, 2.3452106601916904, -1.6478026401803338, -3.8514964959075564, -8.03770445365737, 2.2493401510274245], 'output': 0.05144277178676535, 'delta': -1.92555165467522e-06}, {'weights': [5.04458594091049, 5.500138367766241, -0.9754913250729528, -7.25933156498466, 4.124330444861194, 3.198582594884277, 5.583795007053761, -7.5194448374751754], 'output': 0.045007936194373745, 'delta': -2.1211990925600116e-07}, {'weights': [1.908430684584192, 1.3050919187887955, -1.2137491854128102, -11.45949189359298, 2.3055908810463888, 3.0525705254862756, 12.111815385367418, -2.0086608214129593], 'output': 0.8037050454762877, 'delta': 6.0148107681545645e-06}, {'weights': [-8.0765698847638, -8.558023693096585, 1.75565419034918, -7.314941971429233, -5.520336766342848, -0.4608001818469002, 8.892125325827156, 5.110296966898919], 'output': 0.9199642604005556, 'delta': 3.5899521323117724e-06}], [{'weights': [-3.588891480664068, -9.2092513592461, -4.391046773876498, 6.190143211959452, 8.653848368213707, -2.679833798723615], 'output': 0.9980505756301387, 'delta': 3.7928470633718865e-06}, {'weights': [-2.9068530637115364, 0.31880436326238554, 8.226320877626847, 7.716969155878674, -6.275643240395172, -5.588328986680962], 'output': 0.0005618904952050509, 'delta': -3.155435280128587e-07}, {'weights': [5.375128138591829, 2.749550667338565, -8.882902121116135, -10.599915873324463, -8.658528227571852, 5.063315646378655], 'output': 0.0012702767350713444, 'delta': -1.6115532613337252e-06}]]

def cekKonvergen(old,new,limit = 0.001):
    stateStop = True
    a = 0
    for i in old[0]:
        b = 0
        for j in i['weights']:
            diff = abs(j-new[0][a]['weights'][b])
            # print(j,' => ',new[0][a]['weights'][b],' => ',diff,' => ',('SMALLER' if diff <= limit else 'BIGGER'))
            if(diff > limit):
                # print('ahai')
                stateStop = False
                break
            b+=1
        if(stateStop is False):
            break
        a+=1
        # print('-')

    if(stateStop is True):
        a = 0
        for i in old[1]:
            b = 0
            for j in i['weights']:
                diff = abs(j - new[1][a]['weights'][b])
                # print(j, ' => ', new[1][a]['weights'][b], ' => ', diff, ' => ', ('SMALLER' if diff <= limit else 'BIGGER'))
                if (diff > limit):
                    # print('ahai')
                    stateStop = False
                    break
                b += 1
            if (stateStop is False):
                break
            a += 1
            # print('-')
    return (stateStop)

# print(cekKonvergen(old,new,0.1))